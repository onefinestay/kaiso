Version 0.40.0
--------------

Create types with MERGE instead of CREATE UNIQUE (to work around neo4j bug)
Drop support for the temp:// db


Version 0.30.2
------------------

Bugfix in `get_declared_attrs`


Version 0.30.1
------------------

Set relationship references when instantiating entities to remove need for
`__getattribute__`, which slows down attribute access.


Version 0.30.0
------------------

Stop using legacy indexes in favour of label indexes. Relationship indexes are
no longer supported.

Manager kwarg `skip_type_loading` has been renamed `skip_setup` to
reflect more processing being bypassed.


Version 0.23.0
------------------

Add `get_match_clause` to replace `get_start_clause` using label index lookups
and switch all node lookups. Relationship lookups left until unique attributes
on relationships are deprecated


Version 0.22.0
--------------

Allow py2neo primitives nested in lists of lists to be converted to python objects
in query results.


Version 0.21.0
--------------

Start creating labels and constraints for types with unique attributes. This
begins the migration away from legacy indexes towards using labels.


Version 0.20.1
--------------

Bugfix: Ensure all class attributes are set correctly in migration helpers.


Version 0.20.0
--------------

Dropped support for Neo4j 1.9 Cypher in favour of 2.0.


Version 0.17.1
--------------

Migration helpers enhancement to allow the `type_registry` to be previewed when
changing bases for a type.


Version 0.17.0
--------------

Add type coercion and validation. Attribute values for builtin types (e.g. int)
are now coerced before inserting into the db, and for types that use more
permissive primitive types in the db (e.g. uuids stored as strings), values are
also validated to be correctly coercible back when retrieving from the db.


Version 0.16.2
--------------

Bugfix: Manager `get` method raises ValueError if given attr=None.


Version 0.16.1
--------------

Bugfix: Don't break with non-ascii query parameters.


Version 0.16.0
--------------

Manager `get` method now only queries via indexes. It is no longer possible
to find nodes/relationships via `get` by providing non-indexed attribute
values.


Version 0.15.2
--------------

Bugfix to make sure indexes are only created for types with unique attrs.
Downgrade py2neo to v1.5 until 1.6 has some performance enhancements.


Version 0.15.1
--------------

Bug/performance fix for checking existence of nodes with multiple indexes.


Version 0.15.0
--------------

Add compatibility shim for forward compatibility with neo4j 2.0. This begins
our transition to 2.0, which going forward will mean dropping support for 1.9.


Version 0.14.3
--------------

New module `migration_helpers` with tools to aid in making "schema" changes,
e.g. altering the type hierarchy. Initially adds `validate_base_change` to
check consistency is retained when changing the bases of a type.


Version 0.14.2
--------------

Cache descriptors for static types.
Cache all descriptor properties.


Version 0.14.1
--------------

Fix indexes when type of instance is changed.

Don't pin version of iso8601 library, allow future versions as well.

Applied attempted workaround for intermittent " UNNAMEDx" issue seen in earlier
releases of Neo4j 1.9 server.


Version 0.14.0
--------------

Add `Manager.get_by_unique_attr` to bulk load objects given a list of values
for a unique attribute.


Version 0.13.4
--------------

Bugfix: `change_instance_type` now creates the correct properties with the
new InstanceOf relationship.


Version 0.13.3
--------------

Addressing performance issue in `_conver_value()` which issued unnecessary
http requests for getting node propertiest.

Removed the need for relationship objects to have start and end attributes
when saving.


Version 0.13.2
--------------

Bugfix: Allow deletion of types with no attributes.


Version 0.13.1
--------------

Minor: Expose `for_db` (default: False) via `Manager.serialize` (was previously
only available in the lower-level `TypeRegistry.object_to_dict`). See docs for
`Manager.serialize` for details.


Version 0.13.0
--------------

Add `Manager.has_code_defined_attribute` to determine whether an attribute was
defined on a type in code.

Minor: Removed unnecessary `Manager.is_registered_type` and
`Manager.get_registered_types` methods.


Version 0.12.0
--------------

Add `Manager.change_instance_type` to change the type of existing instances.

Minor: Start reorganising the test suite to have more smaller test modules.


Version 0.11.0
--------------

`Manager.query` (and `Manager._execute`) now return generators of results
instead of being generators themselves. This way, calling `query` triggers
the execution, rather than requiring e.g. `next(manager.query(...), None)`.

Minor: Also fixed the connection tests so they no longer need to be first.


Version 0.10.0
--------------

Explicit type creation: Types are no longer lazily created when instance.save
is called. If the type isn't already persisted, `TypeNotPersistedError` will be
raised.

This enables more aggressive caching of the type registry.
